#!/usr/bin/env ruby
require_relative '../lib/game_logic.rb'

# board

class TicTac
  def initialize; end

  def checkwinner
    if $instance.board[0]==$instance.board[1] && $instance.board[1]==$instance.board[2]
      return true
    elsif $instance.board[3]==$instance.board[4] && $instance.board[4]==$instance.board[5]
      return true

    elsif $instance.board[6]==$instance.board[7] && $instance.board[7]==$instance.board[8]
      return true

    elsif $instance.board[0]==$instance.board[3] && $instance.board[3]==$instance.board[6]
      return true

    elsif $instance.board[1]==$instance.board[4] && $instance.board[4]==$instance.board[7]
      return true

    elsif $instance.board[2]==$instance.board[5] && $instance.board[5]==$instance.board[8]
      return true

    elsif $instance.board[0]==$instance.board[4] && $instance.board[4]==$instance.board[8]
      return true

    elsif $instance.board[2]==$instance.board[4] && $instance.board[4]==$instance.board[6]
      return true
    else
      return false
    end
  end

  def playerturn(name,x)
    puts "Its #{name} turn!"
    puts "\n"
    puts 'Please select the available cell from the board'
    cell_num = gets.chomp.to_i
    loop do
      if cell_num >= 1 && cell_num <= 9  &&  $instance.board[cell_num-1]==cell_num        
        if x==0
          $instance.board[cell_num-1]='X'
        else
          $instance.board[cell_num-1]='O'
        end
        break
      end

      puts 'invalid move'
      puts 'Please enter a valid number from 1 - 9!'
      cell_num = gets.chomp.to_i
    end
  end

  def numeric?(obj)
    !obj.to_s.match(/\A[+-]?\d+?(\.\d+)?\Z/).nil?
  end

  def displayboard
    puts '+---+---+---+'
    puts "| #{$instance.board[0]} | #{$instance.board[1]} | #{$instance.board[2]} |"
    puts '+---+---+---+'
    puts "| #{$instance.board[3]} | #{$instance.board[4]} | #{$instance.board[5]} |"
    puts '+---+---+---+'
    puts "| #{$instance.board[6]} | #{$instance.board[7]} | #{$instance.board[8]} |"
    puts '+---+---+---+'
  end
end
arr=(1..9).to_a 

puts arr[8]
$instance =Board.new
Tic = TicTac.new
puts 'Welcome to Ruby"s Tic Tac Toe'
puts 'Enter first player name:'
name1 = gets.chomp
loop do
  if name1 == ''
    puts 'empty string please input valid name'
  elsif Tic.numeric? name1
    puts 'name can not be integer please input valid name'
  else
    break
  end
  name1 = gets.chomp
end

puts 'Enter second player name:'
name2 = gets.chomp

loop do
  if name2 == ''
    puts 'empty string please input valid name'
  elsif Tic.numeric? name2
    puts 'name can not be integer please input valid name'
  else
    break
  end
  name2 = gets.chomp
end

puts "#{name1} will play with  X and #{name2} will play with  O"
sleep(1)
puts "\n Lets Start.."
sleep(1)
x = 0
num_turn = 0
loop do
  puts `clear`
  Tic.displayboard
  puts "\n"
  if num_turn == 9
    puts 'The game is drawn no player won'
    sleep(3)
    return
  end
  if x.zero?
    Tic.playerturn(name1,x)
    if Tic.checkwinner
      puts `clear`
      Tic.displayboard
      puts "#{name1}is a Winner"
      sleep(3)
      return
    end

    x = 1

  else
    Tic.playerturn(name2,x)
    if Tic.checkwinner
      puts `clear`
      Tic.displayboard
      puts "#{name2}is a Winner"
      return
    end
    x = 0
  end
  num_turn += 1
end


# def full?(board)
#   board.all?{|i| i == "x" || i == "0"}
# end

# def draw?(board)
#   if !won?(board) && full?(board)
#     return true
#   elsif !won (board) && !full?(board)
#     return false
#   else won?(board)
#     return false
#   end
# end
